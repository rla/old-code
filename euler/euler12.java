package euler.problems.problem12;

/**
 * @author raivo
 * The sequence of triangle numbers is generated by adding the natural numbers.
 * So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
 * The first ten terms would be:
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 * Let us list the factors of the first 7 triangle numbers:
 * 1: 1
 * 3: 1,3
 * 6: 1,2,3,6
 * 10: 1,2,5,10
 * 15: 1,3,5,15
 * 21: 1,3,7,21
 * 28: 1,2,4,7,14,28
 * We can see that the 7th triangle number, 28,
 * is the first triangle number to have over five factors.
 */
public class Problem12 {

    public static int numberOfFactors(int x) {
        int sqrt = (int)Math.sqrt(x);
        int i = 1;
        int count = 0;
        while (i < sqrt) {
            if (x % i == 0) {
                count++;
            }
            i++;
        }
        return 2*count;
    }
    
    public static void main(String[] args) {
        System.out.println("numberOfFactors(3)=" + numberOfFactors(3));
        System.out.println("numberOfFactors(3)=" + numberOfFactors(10));
        System.out.println("numberOfFactors(3)=" + numberOfFactors(28));
        long start = System.currentTimeMillis();
        int sum = 0;
        int term = 1;
        do {
            sum += term;
            term++;
        } while (numberOfFactors(sum) <= 500);
        System.out.println(sum);
        System.out.println(System.currentTimeMillis() - start);
    }

}
